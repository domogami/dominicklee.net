{
  "version": 3,
  "sources": ["../../../../node_modules/editorjs-html/build/edjsHTML.node.js", "browser-route-module:/Users/dom/Documents/GitHub/dominicklee.net/app/routes/blog/$slug.tsx?browser", "../../../../app/routes/blog/$slug.tsx", "../../../../app/components/readOnlyEditor.client.tsx"],
  "sourcesContent": ["\"use strict\";var e={delimiter:function(){return\"<br/>\"},header:function(e){var t=e.data;return\"<h\"+t.level+\">\"+t.text+\"</h\"+t.level+\">\"},paragraph:function(e){return\"<p>\"+e.data.text+\"</p>\"},list:function(e){var t=e.data,r=\"unordered\"===t.style?\"ul\":\"ol\",n=function(e,t){var r=e.map((function(e){if(!e.content&&!e.items)return\"<li>\"+e+\"</li>\";var r=\"\";return e.items&&(r=n(e.items,t)),e.content?\"<li> \"+e.content+\" </li>\"+r:void 0}));return\"<\"+t+\">\"+r.join(\"\")+\"</\"+t+\">\"};return n(t.items,r)},image:function(e){var t=e.data,r=t.caption?t.caption:\"Image\";return'<img src=\"'+(t.file&&t.file.url?t.file.url:t.url)+'\" alt=\"'+r+'\" />'},quote:function(e){var t=e.data;return\"<blockquote>\"+t.text+\"</blockquote> - \"+t.caption},code:function(e){return\"<pre><code>\"+e.data.code+\"</code></pre>\"},embed:function(e){var t=e.data;switch(t.service){case\"vimeo\":return'<iframe src=\"'+t.embed+'\" height=\"'+t.height+'\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen></iframe>';case\"youtube\":return'<iframe width=\"'+t.width+'\" height=\"'+t.height+'\" src=\"'+t.embed+'\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>';default:throw new Error(\"Only Youtube and Vime Embeds are supported right now.\")}}};function t(e){return new Error('\u001B[31m The Parser function of type \"'+e+'\" is not defined. \\n\\n  Define your custom parser functions as: \u001B[34mhttps://github.com/pavittarx/editorjs-html#extend-for-custom-blocks \u001B[0m')}var r=function(n){void 0===n&&(n={});var i=Object.assign({},e,n);return{parse:function(e){return e.blocks.map((function(e){return i[e.type]?i[e.type](e):t(e.type)}))},parseBlock:function(e){return i[e.type]?i[e.type](e):t(e.type)},parseStrict:function(e){var n=e.blocks,o=r(i).validate({blocks:n});if(o.length)throw new Error(\"Parser Functions missing for blocks: \"+o.toString());for(var u=[],a=0;a<n.length;a++){if(!i[n[a].type])throw t(n[a].type);u.push(i[n[a].type](n[a]))}return u},validate:function(e){var t=e.blocks.map((function(e){return e.type})).filter((function(e,t,r){return r.indexOf(e)===t})),r=Object.keys(i);return t.filter((function(e){return!r.includes(e)}))}}};module.exports=r;\n", "export { default } from \"/Users/dom/Documents/GitHub/dominicklee.net/app/routes/blog/$slug.tsx\";", "import { useLoaderData } from 'remix';\nimport invariant from 'tiny-invariant';\nimport { getPost } from '~/post';\nimport edjsParser from 'editorjs-html';\n\nimport Editor from '~/components/readOnlyEditor.client';\nimport { ClientOnly } from 'remix-utils';\n\nexport let loader = async ({ params }) => {\n  invariant(params.slug, 'expected params.slug');\n  return getPost(params.slug);\n};\n\nexport default function PostSlug() {\n  let post = useLoaderData();\n  let html = edjsParser.parse(post.editorjs)\n  console.log(html);\n  return (\n    <>\n      {html}\n      <div className=\"blog-post-container\">\n        <ClientOnly>{() => <Editor previousData={post.editorjs} />}</ClientOnly>\n      </div>\n      {/* <div */}\n      {/*   className=\"postDisplay\" */}\n      {/*   dangerouslySetInnerHTML={{ __html: post.html }} */}\n      {/* /> */}\n    </>\n  );\n}\n", "import React from 'react';\nimport { createReactEditorJS } from 'react-editor-js';\nimport { EDITOR_JS_TOOLS } from './editorjsPlugins';\nconst ReactEditorJS = createReactEditorJS();\nimport { useEffect, useRef, useState } from 'react';\n\nexport default function Editor(props) {\n  const editorCore = React.useRef(null);\n  const handleInitialize = React.useCallback((instance) => {\n    editorCore.current = instance;\n  }, []);\n\n  return (\n    <>\n      <ReactEditorJS\n        onInitialize={handleInitialize}\n        tools={EDITOR_JS_TOOLS}\n        defaultValue={JSON.parse(props.previousData)}\n        readOnly={true}\n      />\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
