{
  "version": 3,
  "sources": ["browser-route-module:/Users/dom/Documents/GitHub/dominicklee.net/app/routes/startpage.tsx?browser", "../../../app/routes/startpage.tsx"],
  "sourcesContent": ["export { default } from \"/Users/dom/Documents/GitHub/dominicklee.net/app/routes/startpage.tsx\";", "import { Outlet } from 'remix';\nimport React from 'react';\nexport const useDate = () => {\n  const locale = 'en';\n  const [today, setDate] = React.useState(new Date()); // Save the current date to be able to trigger an update\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      // Creates an interval which will update the current data every minute\n      // This will trigger a rerender every component that uses the useDate hook.\n      setDate(new Date());\n    }, 60 * 1000);\n    return () => {\n      clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\n    };\n  }, []);\n\n  const day = today.toLocaleDateString(locale, { weekday: 'long' });\n  const date = `${day}, ${today.getDate()} ${today.toLocaleDateString(locale, {\n    month: 'long',\n  })}\\n\\n`;\n\n  const hour = today.getHours();\n  const wish = `Good ${(hour < 12 && 'Morning') || (hour < 17 && 'Afternoon') || 'Evening'\n    } `;\n\n  const time = today.toLocaleTimeString(locale, {\n    hour: 'numeric',\n    hour12: true,\n    minute: 'numeric',\n  });\n\n  return {\n    date,\n    time,\n    wish,\n  };\n};\n\nexport default function Startpage() {\n  let todaysDate = useDate();\n  return (\n    <div className=\"startpage-containter\">\n      <h1>\n        Welcome Back <span className=\"light-theme green-text\">Dom</span>{' '}\n      </h1>\n      <Outlet />\n      <h2 id=\"date\">\n        {todaysDate.date} | {todaysDate.time} | {todaysDate.wish}\n      </h2>\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;AAAA;;;ACAA;AACA,mBAAkB;AACX,IAAM,UAAU,MAAM;AAC3B,QAAM,SAAS;AACf,QAAM,CAAC,OAAO,WAAW,qBAAM,SAAS,IAAI;AAE5C,uBAAM,UAAU,MAAM;AACpB,UAAM,QAAQ,YAAY,MAAM;AAG9B,cAAQ,IAAI;AAAA,OACX,KAAK;AACR,WAAO,MAAM;AACX,oBAAc;AAAA;AAAA,KAEf;AAEH,QAAM,MAAM,MAAM,mBAAmB,QAAQ,EAAE,SAAS;AACxD,QAAM,OAAO,GAAG,QAAQ,MAAM,aAAa,MAAM,mBAAmB,QAAQ;AAAA,IAC1E,OAAO;AAAA;AAAA;AAAA;AAGT,QAAM,OAAO,MAAM;AACnB,QAAM,OAAO,QAAS,OAAO,MAAM,aAAe,OAAO,MAAM,eAAgB;AAG/E,QAAM,OAAO,MAAM,mBAAmB,QAAQ;AAAA,IAC5C,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA;AAGV,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAIW,qBAAqB;AAClC,MAAI,aAAa;AACjB,SACE,mDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,mDAAC,MAAD,MAAI,iBACW,mDAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAyB,QAAW,MAEnE,mDAAC,gCAAD,OACA,mDAAC,MAAD;AAAA,IAAI,IAAG;AAAA,KACJ,WAAW,MAAK,OAAI,WAAW,MAAK,OAAI,WAAW;AAAA;",
  "names": []
}
