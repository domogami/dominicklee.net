{
  "version": 3,
  "sources": ["browser-route-module:/Users/dom/Documents/GitHub/dominicklee.net/app/routes/admin/$edit.tsx?browser", "../../../../app/routes/admin/$edit.tsx"],
  "sourcesContent": ["export { default } from \"/Users/dom/Documents/GitHub/dominicklee.net/app/routes/admin/$edit.tsx\";", "import invariant from 'tiny-invariant';\nimport { getPostEdit } from '~/post';\nimport {\n  redirect,\n  Form,\n  useActionData,\n  useTransition,\n  useLoaderData,\n} from 'remix';\nimport { updatePost } from '~/post';\nimport Editor from '~/components/editor.client';\nimport { ClientOnly } from 'remix-utils';\n\nexport let loader = async ({ params }) => {\n  invariant(params.edit, 'expected params.edit');\n  return getPostEdit(params.edit);\n};\n\nvar editorjsData = {};\n\nexport let action = async ({ request }) => {\n  let formData = await request.formData();\n\n  let title = formData.get('title');\n  let slug = formData.get('slug');\n  let markdown = formData.get('markdown');\n  let id = formData.get('id');\n  let editorjs = editorjsData;\n\n  let errors = {};\n  if (!title) errors.title = true;\n  if (!slug) errors.slug = true;\n  if (!markdown) errors.markdown = true;\n\n  if (Object.keys(errors).length) {\n    return errors;\n  }\n\n  console.log(\n    'calling updatePost with id, title, slug, markdown: ',\n    id,\n    title,\n    slug,\n    markdown,\n    editorjs\n  );\n  await updatePost({ id, title, slug, markdown, editorjs });\n\n  return redirect('/admin');\n};\n\nexport default function PostSlug() {\n  // function saveData(editorjsData) {\n  //   post.editorjs = editorjsData;\n  //   editorjs = editorjsData;\n  // }\n  let errors = useActionData();\n  let transition = useTransition();\n  let post = useLoaderData();\n  return (\n    <Form method=\"post\">\n      <p>\n        <input className=\"hiddenBlogID\" name=\"id\" value={post.id}></input>\n      </p>\n      <p>\n        <label htmlFor=\"\">\n          Post Title: {errors?.title && <em>Title is required</em>}{' '}\n          <input type=\"text\" name=\"title\" defaultValue={post.title} />\n        </label>\n      </p>\n      <p>\n        <label htmlFor=\"\">\n          {' '}\n          Post Slug: {errors?.slug && <em>Slug is required</em>}\n          <input\n            defaultValue={post.slug}\n            id=\"slugInput\"\n            type=\"text\"\n            name=\"slug\"\n          />\n        </label>\n      </p>\n      <p>\n        <label htmlFor=\"markdown\">Markdown:</label>{' '}\n        {errors?.markdown && <em>Markdown is required</em>}\n        <br />\n        {/* <ClientOnly> */}\n        {/* {() => <Editor data={post.editorjs} save={editorjsData} />} */}\n        {/* </ClientOnly> */}\n        {/* <Editor data={post.editorjs} save={this.saveData} /> */}\n        <textarea\n          defaultValue={post.markdown}\n          name=\"markdown\"\n          id=\"\"\n          rows={20}\n          cols={30}\n        />\n      </p>\n      <p>\n        <button type=\"submit\">\n          {transition.submission ? 'Updating...' : 'Update Post'}\n        </button>\n      </p>\n    </Form>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;AAAA;;;ACAA;AAmDe,oBAAoB;AAKjC,MAAI,SAAS;AACb,MAAI,aAAa;AACjB,MAAI,OAAO;AACX,SACE,oCAAC,MAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,KAAD,MACE,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,IAAe,MAAK;AAAA,IAAK,OAAO,KAAK;AAAA,OAExD,oCAAC,KAAD,MACE,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAG,gBACH,kCAAQ,UAAS,oCAAC,MAAD,MAAI,sBAAwB,KAC1D,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAO,MAAK;AAAA,IAAQ,cAAc,KAAK;AAAA,QAGvD,oCAAC,KAAD,MACE,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KACZ,KAAI,eACO,kCAAQ,SAAQ,oCAAC,MAAD,MAAI,qBAChC,oCAAC,SAAD;AAAA,IACE,cAAc,KAAK;AAAA,IACnB,IAAG;AAAA,IACH,MAAK;AAAA,IACL,MAAK;AAAA,QAIX,oCAAC,KAAD,MACE,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAW,cAAkB,KAC3C,kCAAQ,aAAY,oCAAC,MAAD,MAAI,yBACzB,oCAAC,MAAD,OAKA,oCAAC,YAAD;AAAA,IACE,cAAc,KAAK;AAAA,IACnB,MAAK;AAAA,IACL,IAAG;AAAA,IACH,MAAM;AAAA,IACN,MAAM;AAAA,OAGV,oCAAC,KAAD,MACE,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,KACV,WAAW,aAAa,gBAAgB;AAAA;",
  "names": []
}
