{
  "version": 3,
  "sources": ["browser-route-module:/Users/dom/Documents/GitHub/dominicklee.net/app/routes/admin/$edit.tsx?browser", "../../../../app/routes/admin/$edit.tsx"],
  "sourcesContent": ["export { default } from \"/Users/dom/Documents/GitHub/dominicklee.net/app/routes/admin/$edit.tsx\";", "import invariant from 'tiny-invariant';\nimport { getPostEdit } from \"~/post\";\nimport { redirect, Form, useActionData, useTransition, useLoaderData } from \"remix\";\nimport { updatePost } from \"~/post\";\n\n\nexport let loader = async ({ params }) => {\n  invariant(params.edit, \"expected params.edit\");\n  return getPostEdit(params.edit);\n}\n\nexport let action = async ({ request }) => {\n  let formData = await request.formData();\n\n  let title = formData.get(\"title\");\n  let slug = formData.get(\"slug\")\n  let markdown = formData.get(\"markdown\")\n  let id = formData.get(\"id\");\n\n  let errors = {};\n  if (!title) errors.title = true;\n  if (!slug) errors.slug = true;\n  if (!markdown) errors.markdown = true;\n\n  if (Object.keys(errors).length) {\n    return errors;\n  }\n\n  console.log('calling updatePost with id, title, slug, markdown: ', id, title, slug, markdown)\n  await updatePost({ id, title, slug, markdown });\n\n  return redirect(\"/admin\")\n}\n\nexport default function PostSlug() {\n  let errors = useActionData();\n  let transition = useTransition();\n  let post = useLoaderData();\n  return (\n    <Form method=\"post\">\n      <p>\n        <input className=\"hiddenBlogID\" name=\"id\" value={post.id}>\n        </input>\n      </p>\n      <p>\n        <label htmlFor=\"\">\n          Post Title: {\" \"} {errors?.title && <em>Title is required</em>} <input type=\"text\" name=\"title\" defaultValue={post.title} />\n        </label>\n      </p>\n      <p>\n        <label htmlFor=\"\"> Post Slug: {\" \"} {errors?.slug && <em>Slug is required</em>}\n          <input defaultValue={post.slug} id=\"slugInput\" type=\"text\" name=\"slug\" />\n        </label>\n      </p>\n      <p>\n        <label htmlFor=\"markdown\">Markdown:</label>{\" \"} {errors?.markdown && <em>Markdown is required</em>}\n        <br />\n        <textarea defaultValue={post.markdown} name=\"markdown\" id=\"\" rows={20} cols={30} />\n      </p>\n      <p>\n        <button type=\"submit\">{transition.submission ? \"Updating...\" : \"Update Post\"}</button>\n      </p>\n    </Form>\n  )\n}\n"],
  "mappings": ";;;;;;;;;;;;AAAA;;;ACAA;AAkCe,oBAAoB;AACjC,MAAI,SAAS;AACb,MAAI,aAAa;AACjB,MAAI,OAAO;AACX,SACE,oCAAC,MAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,KAAD,MACE,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,IAAe,MAAK;AAAA,IAAK,OAAO,KAAK;AAAA,OAGxD,oCAAC,KAAD,MACE,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAG,gBACH,KAAI,KAAE,kCAAQ,UAAS,oCAAC,MAAD,MAAI,sBAAuB,KAAC,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAO,MAAK;AAAA,IAAQ,cAAc,KAAK;AAAA,QAGvH,oCAAC,KAAD,MACE,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAG,gBAAa,KAAI,KAAE,kCAAQ,SAAQ,oCAAC,MAAD,MAAI,qBACvD,oCAAC,SAAD;AAAA,IAAO,cAAc,KAAK;AAAA,IAAM,IAAG;AAAA,IAAY,MAAK;AAAA,IAAO,MAAK;AAAA,QAGpE,oCAAC,KAAD,MACE,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAW,cAAkB,KAAI,KAAE,kCAAQ,aAAY,oCAAC,MAAD,MAAI,yBAC1E,oCAAC,MAAD,OACA,oCAAC,YAAD;AAAA,IAAU,cAAc,KAAK;AAAA,IAAU,MAAK;AAAA,IAAW,IAAG;AAAA,IAAG,MAAM;AAAA,IAAI,MAAM;AAAA,OAE/E,oCAAC,KAAD,MACE,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,KAAU,WAAW,aAAa,gBAAgB;AAAA;",
  "names": []
}
