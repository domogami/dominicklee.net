{
  "version": 3,
  "sources": ["browser-route-module:/Users/dom/Documents/GitHub/dominicklee.net/app/root.tsx?browser", "../../app/root.tsx", "../../app/components/ThemeProvider.js"],
  "sourcesContent": ["export { default, meta } from \"/Users/dom/Documents/GitHub/dominicklee.net/app/root.tsx\";", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from 'remix';\nimport type { MetaFunction } from 'remix';\nimport ThemeProvider from './components/ThemeProvider';\n\nimport ThemeContext, { initialThemeState } from './components/ThemeContext';\nimport React, { useState, useEffect, useContext } from 'react';\n\nexport const meta: MetaFunction = () => {\n  return { title: \"I'm Dominick Lee\" };\n};\n\nexport default function App() {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  if (typeof window !== 'undefined') {\n    const localStorage = window.localStorage;\n  }\n\n  useEffect(() => {\n    const savedThemeLocal = localStorage.getItem('globalTheme');\n\n    if (!!savedThemeLocal) {\n      setTheme(savedThemeLocal);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('globalTheme', theme);\n  }, [theme]);\n\n\n  return (\n    <html lang=\"en\" className={`theme--${theme}`}>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className={`theme--${theme}`}>\n        <ThemeProvider theme={theme} setTheme={setTheme}>\n          <Outlet />\n          <ScrollRestoration />\n          <Scripts />\n          {process.env.NODE_ENV === 'development' && <LiveReload />}\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n", "// ThemeProvider.js\nimport React, { useState, useEffect } from 'react';\nimport ThemeContext, { initialThemeState } from './ThemeContext';\n\nimport { useContext } from 'react';\nconst ThemeProvider = ({ children }) => {\n\n  const [theme, setTheme] = useState(initialThemeState.theme);\n\n  if (typeof window !== 'undefined') {\n    const localStorage = window.localStorage;\n  }\n\n  useEffect(() => {\n    const savedThemeLocal = localStorage.getItem('globalTheme');\n\n    if (!!savedThemeLocal) {\n      setTheme(savedThemeLocal);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('globalTheme', theme);\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={theme, setTheme}>\n      <div className={`theme--${theme}`}>{children}</div>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeProvider;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;;;ACAA;AACA,mBAA2C;AAG3C,oBAA2B;AAC3B,IAAM,gBAAgB,CAAC,EAAE,eAAe;AAEtC,QAAM,CAAC,OAAO,YAAY,2BAAS,kBAAkB;AAErD,MAAI,OAAO,WAAW,aAAa;AACjC,UAAM,gBAAe,OAAO;AAAA;AAG9B,8BAAU,MAAM;AACd,UAAM,kBAAkB,aAAa,QAAQ;AAE7C,QAAI,CAAC,CAAC,iBAAiB;AACrB,eAAS;AAAA;AAAA,KAEV;AAEH,8BAAU,MAAM;AACd,iBAAa,QAAQ,eAAe;AAAA,KACnC,CAAC;AAEJ,SACE,mDAAC,qBAAa,UAAd;AAAA,IAAuB,OAAO,QAAO;AAAA,KACnC,mDAAC,OAAD;AAAA,IAAK,WAAW,UAAU;AAAA,KAAU;AAAA;AAK1C,IAAO,wBAAQ;;;ADpBf,oBAAuD;AAEhD,IAAM,OAAqB,MAAM;AACtC,SAAO,EAAE,OAAO;AAAA;AAGH,eAAe;AAC5B,QAAM,EAAE,OAAO,aAAa,8BAAW;AAEvC,MAAI,OAAO,WAAW,aAAa;AACjC,UAAM,gBAAe,OAAO;AAAA;AAG9B,+BAAU,MAAM;AACd,UAAM,kBAAkB,aAAa,QAAQ;AAE7C,QAAI,CAAC,CAAC,iBAAiB;AACrB,eAAS;AAAA;AAAA,KAEV;AAEH,+BAAU,MAAM;AACd,iBAAa,QAAQ,eAAe;AAAA,KACnC,CAAC;AAGJ,SACE,oDAAC,QAAD;AAAA,IAAM,MAAK;AAAA,IAAK,WAAW,UAAU;AAAA,KACnC,oDAAC,QAAD,MACE,oDAAC,QAAD;AAAA,IAAM,SAAQ;AAAA,MACd,oDAAC,QAAD;AAAA,IAAM,MAAK;AAAA,IAAW,SAAQ;AAAA,MAC9B,oDAAC,MAAD,OACA,oDAAC,OAAD,QAEF,oDAAC,QAAD;AAAA,IAAM,WAAW,UAAU;AAAA,KACzB,oDAAC,uBAAD;AAAA,IAAe;AAAA,IAAc;AAAA,KAC3B,oDAAC,QAAD,OACA,oDAAC,mBAAD,OACA,oDAAC,SAAD,OAC2C,oDAAC,YAAD;AAAA;",
  "names": []
}
